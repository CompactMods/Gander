# Translucency (screm)
public net.minecraft.client.renderer.LevelRenderer transparencyChain

public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType sortOnUpload

# ARE YOU HAPPY NOW, FRY
public net.minecraft.client.renderer.RenderType$CompositeState <init>(Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;Lnet/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard;Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)V # <init>
public net.minecraft.client.renderer.RenderType$CompositeState textureState
public net.minecraft.client.renderer.RenderType$CompositeState shaderState
public net.minecraft.client.renderer.RenderType$CompositeState transparencyState
public net.minecraft.client.renderer.RenderType$CompositeState depthTestState
public net.minecraft.client.renderer.RenderType$CompositeState cullState
public net.minecraft.client.renderer.RenderType$CompositeState lightmapState
public net.minecraft.client.renderer.RenderType$CompositeState overlayState
public net.minecraft.client.renderer.RenderType$CompositeState layeringState
public net.minecraft.client.renderer.RenderType$CompositeState texturingState
public net.minecraft.client.renderer.RenderType$CompositeState writeMaskState
public net.minecraft.client.renderer.RenderType$CompositeState lineState
public net.minecraft.client.renderer.RenderType$CompositeState colorLogicState
public net.minecraft.client.renderer.RenderType$CompositeState outlineProperty
public net.minecraft.client.renderer.RenderType$CompositeState outputState

public net.minecraft.client.renderer.RenderStateShard MAIN_TARGET
public net.minecraft.client.renderer.RenderStateShard OUTLINE_TARGET
public net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TARGET
public net.minecraft.client.renderer.RenderStateShard PARTICLES_TARGET
public net.minecraft.client.renderer.RenderStateShard WEATHER_TARGET
public net.minecraft.client.renderer.RenderStateShard CLOUDS_TARGET
public net.minecraft.client.renderer.RenderStateShard ITEM_ENTITY_TARGET

# But why tho
public net.minecraft.client.renderer.PostChain getRenderTarget(Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget;

# I blame Proguard for this
public net.minecraft.client.renderer.MultiBufferSource$BufferSource builder
public net.minecraft.client.renderer.MultiBufferSource$BufferSource fixedBuffers
public net.minecraft.client.renderer.MultiBufferSource$BufferSource lastState
public net.minecraft.client.renderer.MultiBufferSource$BufferSource startedBuffers

# effective. Power لُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ 冗

public com.mojang.blaze3d.platform.GlStateManager$TextureState

protected net.minecraft.client.renderer.EffectInstance dirty
protected net.minecraft.client.renderer.EffectInstance lastAppliedEffect
protected net.minecraft.client.renderer.EffectInstance blend
protected net.minecraft.client.renderer.EffectInstance programId
protected net.minecraft.client.renderer.EffectInstance lastProgramId
protected net.minecraft.client.renderer.EffectInstance samplerLocations
protected net.minecraft.client.renderer.EffectInstance samplerNames
protected net.minecraft.client.renderer.EffectInstance samplerMap
protected net.minecraft.client.renderer.EffectInstance uniforms
